# üìå Sprint Simulation Documentation

## üéØ Sprint Milestone
- **Sprint Name:** Sprint 1
- **Duration:** 2 Weeks  
- **Sprint Goal:** Deliver core functionalities and gather initial feedback.

---

## üìù Sprint Planning
1. **Create a Sprint Milestone**  
   - Name: `Sprint 1`
   - Duration: 2 weeks

2. **Select Top 4 Stories and Assign Estimates:**
| No. | Title                     | Story Points | Status        |
|:----|:--------------------------|:--------------|:---------------|
| 1   | As a user, I need to register an account so that I can log in. | 5 | Sprint Backlog |
| 2   | As a user, I need to log in so that I can access my dashboard. | 3 | Sprint Backlog |
| 3   | As an admin, I need to view user data so that I can manage users. | 3 | Sprint Backlog |
| 4   | As a user, I need to reset my password so that I can recover access. | 2 | Sprint Backlog |

---

## üîÑ Sprint Simulation Workflow

1. **Assign Top Story**
   - Story: Register an account
   - Assign to yourself
   - Move to `In Progress`

2. **Move Story to Review/QA**
   - Move "Register an account" to `Review/QA`
   - Assign next story ("Log in") to yourself
   - Move "Log in" to `In Progress`

3. **Complete and Move Stories**
   - Move "Register an account" to `Done`
   - Move "Log in" to `Review/QA`
   - Assign next story ("View user data") to yourself
   - Move "View user data" to `In Progress`

4. **Finish Sprint**
   - Move "Log in" to `Done`
   - Leave "View user data" in `In Progress`
   - End sprint

---

## üìä Burndown Chart
Ensure the burndown chart is configured for:
- **Sprint:** Sprint 1
- **Track:** Story Points completed vs remaining daily
- Should reflect:
  - Start with 13 points
  - Drop as stories move to `Done`
  - Remaining points visible at sprint end

---

## üîó Kanban Board URL
**[Insert your Kanban board URL here for peer review]**

---

## ‚úÖ Notes
- Label requirements 9 and 10 as `technical debt`
- Use story template:  
  `As a [role], I need [function], so that [benefit]`
- Use acceptance criteria with Gherkin:  
  `Given [context], When [event], Then [outcome]`
- Assign estimates and labels for all stories.
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
